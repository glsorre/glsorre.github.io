{"version":3,"sources":["webpack:///./src/templates/page-template.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/rightright_logo.svg","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/footer.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","d","Template","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","_ref","markdownRemark","data","frontmatter","html","a","createElement","title","keywords","class","dangerouslySetInnerHTML","__html","graphql","StaticQueryContext","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","Consumer","staticQueryData","query","render","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","p","SEO","description","lang","meta","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","array","arrayOf","Header","siteTitle","menu","react_default","es","_ref2","role","gatsby_browser_entry","to","filter","item","path","map","label","href","Footer","id","Date","getFullYear","Layout","Fragment","header","footer","_822286949","node"],"mappings":"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","file":"component---src-templates-page-template-js-51855ec1a1dec2308995.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nexport default function Template({\n  data, // this prop will be injected by the GraphQL query below.\n}) {\n  const { markdownRemark } = data // data.markdownRemark holds our post data\n  const { frontmatter, html } = markdownRemark\n  return (\n    <Layout>\n      <SEO title={frontmatter.title} keywords={[`blog`, `rightright`, `giuseppe sorrentino`]} />\n      <div class=\"home grid\">\n        <div\n        class=\"unit whole\"\n        dangerouslySetInnerHTML={{ __html: html }}\n        >\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query($path: String!) {\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      html\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        path\n        title\n      }\n    }\n  }\n`","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","module.exports = __webpack_public_path__ + \"static/rightright_logo-e02ecf92d9ec1569b92902ff002ec699.svg\";","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import { Link } from \"gatsby\"\nimport React from \"react\"\nimport { Location } from '@reach/router';\n\nimport \"./rightright_logo.svg\"\n\nconst Header = ({ siteTitle, menu }) => {\n  return (\n    <Location>\n    {({ location }) => (\n      <header class=\"header\" role=\"banner\">\n        <div class=\"grid\">\n\n          <div class=\"unit golden-small\">\n            <h1 class=\"logo\">\n              <Link\n                to=\"/\"\n              >\n                {siteTitle}\n              </Link>\n            </h1>\n          </div>\n\n          <div class=\"unit golden-big\">\n            <nav class=\"nav\">\n              {menu\n              .filter(item => item.path != location.pathname)\n              .map(item => (\n                <Link\n                  to={item.path}\n                  class=\"nav-link\"\n                >\n                  {item.label}\n                </Link>\n              ))}\n            </nav>\n          </div>\n\n        </div>\n\n        <div class=\"grid\">\n          <p class=\"unit whole description\">\n            i am <a href=\"#contacts\">giuseppe sorrentino</a> and this is my personal digital playground\n          </p>\n        </div>\n\n      </header>\n    )}\n    </Location>\n)}\n\nexport default Header\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Footer = () => (\n  <footer class=\"footer\" id=\"contacts\">\n    <div class=\"grid\">\n      <div class=\"unit whole\">\n        <p class=\"author-copyright\">\n        &#169; {new Date().getFullYear()} rightright.me\n        </p>\n      </div>\n    </div>\n  </footer>\n)\n\nexport default Footer\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport Footer from \"./footer\"\nimport \"./layout.scss\"\nimport \"typeface-source-sans-pro\"\n\nconst Layout = ({ children }) => {\n  return (\n  <StaticQuery\n    query={graphql`\n    query {\n        site {\n          siteMetadata {\n            title\n            menu {\n              label\n              path\n            }\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <div class=\"container\">\n          <Header siteTitle={data.site.siteMetadata.title} menu={data.site.siteMetadata.menu} />\n        \n          {children}\n        </div>\n        <Footer />\n      </>\n    )}\n  />\n)}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}