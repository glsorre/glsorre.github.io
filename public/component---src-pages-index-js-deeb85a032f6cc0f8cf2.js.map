{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/rightright_logo.svg","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/footer.js","webpack:///./src/components/layout.js","webpack:///./node_modules/core-js/modules/es6.string.anchor.js","webpack:///./node_modules/core-js/modules/_string-html.js"],"names":["IndexPage","_ref","edges","data","allMarkdownRemark","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","title","keywords","class","map","link","label","node","frontmatter","type","date","href","anchor","target","desc","pageQuery","__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","Consumer","staticQueryData","query","render","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","p","SEO","description","lang","meta","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","array","arrayOf","Header","siteTitle","menu","react_default","es","_ref2","role","gatsby_browser_entry","to","filter","item","path","Footer","id","Date","getFullYear","Layout","Fragment","header","footer","_822286949","createHTML","this","$export","fails","defined","quot","tag","attribute","value","S","String","p1","replace","NAME","exec","O","P","F","test","toLowerCase","split"],"mappings":"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","file":"component---src-pages-index-js-deeb85a032f6cc0f8cf2.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst IndexPage = ({\n    data: {\n      allMarkdownRemark: { edges },\n    },\n  }) => {\n    return (  \n      <Layout>\n        <SEO title=\"Home\" keywords={[`blog`, `rightright`, `giuseppe sorrentino`]} />\n        <div class=\"home grid\">\n          <div class=\"unit whole\">\n\n            {edges.map(link => {\n\n              let label;\n\n              if (link.node.frontmatter.type == 'medium') {\n                label = <span class=\"post-type\">POST</span>;\n              } else if (link.node.frontmatter.type == 'slideshare') {\n                label = <span class=\"post-type\">SLIDES</span>;\n              } else if (link.node.frontmatter.type == 'project') {\n                label = <span class=\"post-type\">PROJECT</span>;\n              } else if (link.node.frontmatter.type == 'gist') {\n                label = <span class=\"post-type\">GIST</span>;\n              }\n              \n              return (\n                <div class=\"post-container\">\n\n                  {label}\n\n                  <span class=\"post-meta\">{ link.node.frontmatter.date }</span>\n\n                  <h2 class=\"post-title\">\n                    <a class=\"post-link\" href={ link.node.frontmatter.anchor } target=\"_blank\">{ link.node.frontmatter.title }</a>\n                  </h2>\n\n                  <span class=\"post-description\"><i>{ link.node.frontmatter.desc } </i></span>\n                </div>\n              )}\n            )}\n\n          </div>\n        </div>\n      </Layout>\n    )\n  }\n\nexport default IndexPage\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(\n      filter: {fileAbsolutePath: {regex: \"/(links)/\"}}\n      sort: { order: DESC, fields: [frontmatter___date] }\n      ) {\n      edges {\n        node {\n          id\n          frontmatter {\n            date(formatString: \"DD, MM, YYYY\")\n            title\n            desc\n            anchor\n            type\n          }\n        }\n      }\n    }\n  }\n`","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","module.exports = __webpack_public_path__ + \"static/rightright_logo-e02ecf92d9ec1569b92902ff002ec699.svg\";","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import { Link } from \"gatsby\"\nimport React from \"react\"\nimport { Location } from '@reach/router';\n\nimport \"./rightright_logo.svg\"\n\nconst Header = ({ siteTitle, menu }) => {\n  return (\n    <Location>\n    {({ location }) => (\n      <header class=\"header\" role=\"banner\">\n        <div class=\"grid\">\n\n          <div class=\"unit golden-small\">\n            <h1 class=\"logo\">\n              <Link\n                to=\"/\"\n              >\n                {siteTitle}\n              </Link>\n            </h1>\n          </div>\n\n          <div class=\"unit golden-big\">\n            <nav class=\"nav\">\n              {menu\n              .filter(item => item.path != location.pathname)\n              .map(item => (\n                <Link\n                  to={item.path}\n                  class=\"nav-link\"\n                >\n                  {item.label}\n                </Link>\n              ))}\n            </nav>\n          </div>\n\n        </div>\n\n        <div class=\"grid\">\n          <p class=\"unit whole description\">\n            i am <a href=\"#contacts\">giuseppe sorrentino</a> and this is my personal digital playground\n          </p>\n        </div>\n\n      </header>\n    )}\n    </Location>\n)}\n\nexport default Header\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Footer = () => (\n  <footer class=\"footer\" id=\"contacts\">\n    <div class=\"grid\">\n      <div class=\"unit whole\">\n        <p class=\"author-copyright\">\n        &#169; {new Date().getFullYear()} rightright.me\n        </p>\n      </div>\n    </div>\n  </footer>\n)\n\nexport default Footer\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport Footer from \"./footer\"\nimport \"./layout.scss\"\nimport \"typeface-source-sans-pro\"\n\nconst Layout = ({ children }) => {\n  return (\n  <StaticQuery\n    query={graphql`\n    query {\n        site {\n          siteMetadata {\n            title\n            menu {\n              label\n              path\n            }\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <div class=\"container\">\n          <Header siteTitle={data.site.siteMetadata.title} menu={data.site.siteMetadata.menu} />\n        \n          {children}\n        </div>\n        <Footer />\n      </>\n    )}\n  />\n)}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","'use strict';\n// B.2.3.2 String.prototype.anchor(name)\nrequire('./_string-html')('anchor', function (createHTML) {\n  return function anchor(name) {\n    return createHTML(this, 'a', 'name', name);\n  };\n});\n","var $export = require('./_export');\nvar fails = require('./_fails');\nvar defined = require('./_defined');\nvar quot = /\"/g;\n// B.2.3.2.1 CreateHTML(string, tag, attribute, value)\nvar createHTML = function (string, tag, attribute, value) {\n  var S = String(defined(string));\n  var p1 = '<' + tag;\n  if (attribute !== '') p1 += ' ' + attribute + '=\"' + String(value).replace(quot, '&quot;') + '\"';\n  return p1 + '>' + S + '</' + tag + '>';\n};\nmodule.exports = function (NAME, exec) {\n  var O = {};\n  O[NAME] = exec(createHTML);\n  $export($export.P + $export.F * fails(function () {\n    var test = ''[NAME]('\"');\n    return test !== test.toLowerCase() || test.split('\"').length > 3;\n  }), 'String', O);\n};\n"],"sourceRoot":""}