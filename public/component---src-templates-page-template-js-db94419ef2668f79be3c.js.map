{"version":3,"sources":["webpack:///./src/templates/page-template.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/footer.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","d","Template","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","_ref","markdownRemark","data","frontmatter","html","a","createElement","title","keywords","class","dangerouslySetInnerHTML","__html","graphql","StaticQueryContext","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","Consumer","staticQueryData","query","render","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","description","lang","meta","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","array","arrayOf","Header","siteTitle","menu","react_default","role","gatsby_browser_entry","to","map","item","path","label","href","Footer","id","target","Date","getFullYear","Layout","Fragment","header","footer","_822286949","node"],"mappings":"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","file":"component---src-templates-page-template-js-db94419ef2668f79be3c.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nexport default function Template({\n  data, // this prop will be injected by the GraphQL query below.\n}) {\n  const { markdownRemark } = data // data.markdownRemark holds our post data\n  const { frontmatter, html } = markdownRemark\n  return (\n    <Layout>\n      <SEO title={frontmatter.title} keywords={[`blog`, `rightright`, `giuseppe sorrentino`]} />\n      <div class=\"home grid\">\n        <div\n        class=\"unit whole\"\n        dangerouslySetInnerHTML={{ __html: html }}\n        >\n        </div>\n      </div>\n    </Layout>\n\n\n\n    // <div className=\"blog-post-container\">\n    //   <div className=\"blog-post\">\n    //     <h1>{frontmatter.title}</h1>\n    //     <div\n    //       className=\"blog-post-content\"\n    //       dangerouslySetInnerHTML={{ __html: html }}\n    //     />\n    //   </div>\n    // </div>\n  )\n}\n\nexport const pageQuery = graphql`\n  query($path: String!) {\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      html\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        path\n        title\n      }\n    }\n  }\n`","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ siteTitle, menu }) => (\n  <header class=\"header\" role=\"banner\">\n    <div class=\"grid\">\n\n      <div class=\"unit golden-small\">\n        <h1 class=\"logo\">\n          <Link\n            to=\"/\"\n          >\n            {siteTitle}\n          </Link>\n        </h1>\n      </div>\n\n    <div class=\"unit golden-big\">\n        <nav class=\"nav\">\n          {menu.map(item => (\n            <Link\n            to={item.path}\n            class=\"nav-link\"\n          >\n            {item.label}\n          </Link>\n          ))}\n        </nav>\n    </div>\n\n    </div>\n\n    <div class=\"grid\">\n      <p class=\"unit whole description\">\n        i am <a href=\"#contacts\">giuseppe sorrentino</a> and this is my personal digital playground\n      </p>\n    </div>\n\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Footer = () => (\n  <footer class=\"footer\" id=\"contacts\">\n    <div class=\"grid\">\n      <div class=\"unit whole\">\n        <p class=\"author-description\">\n          I am <a href=\"https://it.linkedin.com/in/glsorrentino\" target=\"_blank\">Giuseppe Sorrentino</a> and rightright.me is my personal digital playground.\n        </p>\n        <p>\n          My professional objective is to avoid failure of digital products by thinking/managing them <b>right</b> (using ux and agile) and developing them <b>right</b>.\n        </p>\n        <p class=\"author-description\">\n          Mail: giuseppe [at] rightright [dot] me.\n        </p>\n        <div class=\"addthis_inline_follow_toolbox\"></div>\n        <p class=\"author-copyright\">\n        &#169; {new Date().getFullYear()} rightright.me\n        </p>\n      </div>\n    </div>\n  </footer>\n)\n\nexport default Footer\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport Footer from \"./footer\"\nimport \"./layout.scss\"\nimport \"typeface-source-sans-pro\"\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n    query {\n        site {\n          siteMetadata {\n            title\n            menu {\n              label\n              path\n            }\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} menu={data.site.siteMetadata.menu} />\n        \n        <div>\n          <main>{children}</main>\n        </div>\n\n        <Footer />\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}