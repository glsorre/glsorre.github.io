{"version":3,"sources":["webpack:///./src/templates/page-template.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/rightright_logo.svg","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/footer.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","d","Template","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_reach_router__WEBPACK_IMPORTED_MODULE_1__","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","_ref","markdownRemark","data","frontmatter","html","a","createElement","location","props","title","keywords","class","dangerouslySetInnerHTML","__html","graphql","StaticQueryContext","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","Consumer","staticQueryData","query","render","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","p","SEO","description","lang","meta","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","array","arrayOf","Header","siteTitle","menu","react_default","role","gatsby_browser_entry","to","filter","item","path","map","label","href","Footer","id","Date","getFullYear","Layout","Fragment","header","footer","_822286949","node"],"mappings":"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","file":"component---src-templates-page-template-js-6cad8445140529d7e8ca.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport { Location } from '@reach/router';\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nexport default function Template({\n  data, // this prop will be injected by the GraphQL query below.\n}) {\n  const { markdownRemark } = data // data.markdownRemark holds our post data\n  const { frontmatter, html } = markdownRemark\n  return (\n    <Location>\n      <Layout location={props.location}>\n        <SEO title={frontmatter.title} keywords={[`blog`, `rightright`, `giuseppe sorrentino`]} />\n        <div class=\"home grid\">\n          <div\n          class=\"unit whole\"\n          dangerouslySetInnerHTML={{ __html: html }}\n          >\n          </div>\n        </div>\n      </Layout>\n    </Location>\n  )\n}\n\nexport const pageQuery = graphql`\n  query($path: String!) {\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      html\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        path\n        title\n      }\n    }\n  }\n`","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","module.exports = __webpack_public_path__ + \"static/rightright_logo-e02ecf92d9ec1569b92902ff002ec699.svg\";","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import { Link } from \"gatsby\"\nimport React from \"react\"\n\nimport \"./rightright_logo.svg\"\n\nconst Header = ({ siteTitle, menu, location }) => {\n  return (\n  <header class=\"header\" role=\"banner\">\n    <div class=\"grid\">\n\n      <div class=\"unit golden-small\">\n        <h1 class=\"logo\">\n          <Link\n            to=\"/\"\n          >\n            {siteTitle}\n          </Link>\n        </h1>\n      </div>\n\n      <div class=\"unit golden-big\">\n        <nav class=\"nav\">\n          {menu\n          .filter(item => item.path != location.pathname)\n          .map(item => (\n            <Link\n              to={item.path}\n              class=\"nav-link\"\n            >\n              {item.label}\n            </Link>\n          ))}\n        </nav>\n      </div>\n\n    </div>\n\n    <div class=\"grid\">\n      <p class=\"unit whole description\">\n        i am <a href=\"#contacts\">giuseppe sorrentino</a> and this is my personal digital playground\n      </p>\n    </div>\n\n  </header>\n)}\n\nexport default Header\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Footer = () => (\n  <footer class=\"footer\" id=\"contacts\">\n    <div class=\"grid\">\n      <div class=\"unit whole\">\n        <p class=\"author-copyright\">\n        &#169; {new Date().getFullYear()} rightright.me\n        </p>\n      </div>\n    </div>\n  </footer>\n)\n\nexport default Footer\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport Footer from \"./footer\"\nimport \"./layout.scss\"\nimport \"typeface-source-sans-pro\"\n\nconst Layout = ({ children, location }) => {\n  return (\n  <StaticQuery\n    query={graphql`\n    query {\n        site {\n          siteMetadata {\n            title\n            menu {\n              label\n              path\n            }\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <div class=\"container\">\n          <Header siteTitle={data.site.siteMetadata.title} menu={data.site.siteMetadata.menu} location={location} />\n        \n          {children}\n        </div>\n        <Footer />\n      </>\n    )}\n  />\n)}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}