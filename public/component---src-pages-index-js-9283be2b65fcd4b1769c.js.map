{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","IndexPage","_ref","edges","data","allMarkdownRemark","a","createElement","title","keywords","map","item","key","node","id","frontmatter","to","graphql","StaticQueryContext","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","Consumer","staticQueryData","query","render","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","description","lang","meta","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","array","arrayOf","Header","siteTitle","menu","react_default","class","role","gatsby_browser_entry","path","label","href","Layout","Fragment","header","_822286949"],"mappings":"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","file":"component---src-pages-index-js-9283be2b65fcd4b1769c.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\n//import Image from \"../components/image\"\nimport SEO from \"../components/seo\"\n\nconst IndexPage = ({\n    data: {\n      allMarkdownRemark: { edges },\n    },\n  }) => {\n    return (  \n      <Layout>\n        <SEO title=\"Home\" keywords={[`gatsby`, `application`, `react`]} />\n        <h1>Hi people</h1>\n        <p>Welcome to your new Gatsby site.</p>\n        <p>Now go build something great.</p>\n        {/* <div style={{ maxWidth: `300px`, marginBottom: `1.45rem` }}>\n          <Image />\n        </div> */}\n        <ul>\n          {edges.map(item => (\n            <li key={item.node.id}>{item.node.frontmatter.title}</li>\n          ))}\n        </ul>\n        <Link to=\"/page-2/\">Go to page 2</Link>\n      </Layout>\n    )\n  }\n\nexport default IndexPage\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(sort: { order: DESC, fields: [frontmatter___date] }) {\n      edges {\n        node {\n          id\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            desc\n            anchor\n          }\n        }\n      }\n    }\n  }\n`","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ siteTitle, menu }) => (\n  <header class=\"header\" role=\"banner\">\n    {/* <div>\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n      <h2>{siteDescription}</h2>\n    </div> */}\n\n    <div class=\"grid\">\n\n      <div class=\"unit golden-small\">\n        <h1 class=\"logo\">\n          <Link\n            to=\"/\"\n          >\n            {siteTitle}\n          </Link>\n        </h1>\n      </div>\n\n    <div class=\"unit golden-big\">\n        <nav class=\"nav\">\n          {menu.map(item => (\n            <Link\n            to={item.path}\n          >\n            {item.label}\n          </Link>\n          ))}\n          <a class=\"nav-link\" href=\"#contacts\">contacts</a>\n          <a class=\"nav-link\" href=\"/feed.xml\">feed</a>\n        </nav>\n    </div>\n\n    </div>\n\n    <div class=\"grid\">\n      <p class=\"unit whole description\">\n        i am <a href=\"#contacts\">giuseppe sorrentino</a> and this is my personal digital playground\n      </p>\n    </div>\n\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n    query {\n        site {\n          siteMetadata {\n            title\n            menu {\n              label\n              path\n            }\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} menu={data.site.siteMetadata.menu} />\n        \n        <div>\n          <main>{children}</main>\n        </div>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}